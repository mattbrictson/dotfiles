#!/usr/bin/env ruby
require "cgi"
require "open3"

# Colorization from http://stackoverflow.com/a/11482430
class String
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def red
    colorize(31)
  end
end

def usage_and_exit
  puts <<~USAGE
    bucket operates on the Bitbucket-hosted git repository that is in your
    working directory. It assumes that you have a remote named "origin" that
    points to Bitbucket.

    Usage:

    bucket show     # Opens the Bitbucket website for this repository
    bucket          # Shortcut for `bucket show`
    bucket compare  # Opens the "compare" view for the current branch
    bucket pull     # Creates a new pull request for the current branch
    bucket branches # Shows all un-merged feature branches
  USAGE

  exit(2)
end

def git(*args)
  out, err, status = Open3.capture3("git", *args)
  fail(err) unless status.success?

  out
end

def pull_url
  source = [repository, current_sha, current_branch].join(":")
  "#{show_url}/pull-request/new?source=#{CGI.escape(source)}"
end

def compare_url
  "#{show_url}/branch/#{CGI.escape(current_branch)}#diff"
end

def branches_url
  "#{show_url}/commits/featurebranches"
end

def show_url
  "https://bitbucket.org/#{repository}"
end

def repository
  @repo ||= git("remote", "-v")[%r{bitbucket.org(/|:)(.*)\.git \(push\)}, 2]
  @repo || fail("This doesnâ€™t seem to be a Bitbucket repository.")
end

def current_branch
  @current_branch ||= git("branch")[/\s*\*\s*(.*)/, 1]
end

def current_sha
  @current_sha ||= git("rev-parse", current_branch)[/^\S{12}/]
end

def fail(reason = nil)
  puts reason.to_s.red unless reason.nil?
  exit(1)
end

if $PROGRAM_NAME == __FILE__
  usage_and_exit if (ARGV & %w[-h --help help]).any?

  command = ARGV.first || "show"
  url = send("#{command}_url")

  system("open", url)
end
