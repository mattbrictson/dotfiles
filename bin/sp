#!/usr/bin/env ruby

if ARGV.length > 1 || ARGV.grep(/(-h|--help)/).any?
  puts <<~USAGE
    Sublime Text open as project

    Usage: sp [DIRECTORY]

    Opens DIRECTORY in Sublime Text as a project, creating a new .sublime-project
    descriptor if one does not already exist.

    If a .sublime-project file already exists in DIRECTORY, uses that as the
    project configuration by passing it to `subl --project`.

    Otherwise creates a new, empty .sublime-project file in DIRECTORY and names it
    the same as DIRECTORY. For example, `sp my-project` will create the file
    my-project/my-project.sublime-project and open it in Sublime Text.

    If DIRECTORY is omitted, the working directory (i.e. ".") is used.

    The `subl` command must be installed and available in the PATH.
  USAGE
  exit
end

directory = File.expand_path(ARGV.first || ".", ".")
name = File.basename(directory)
name = "root" if name =~ %r{/}
project = File.join(directory, "#{name}.sublime-project")

unless File.exist?(project)
  if (glob = Dir[File.join(directory, "*.sublime-project")]).any?
    project = glob.first
  else
    IO.write(project, <<~JSON)
      {
        "folders": [
          {
            "path": ".",
            "folder_exclude_patterns": ["build", "public/assets", "public/packs"],
            "file_exclude_patterns": ["yarn.lock", "yarn-error.log"]
          }
        ],
        "settings": {
          "js_prettier": {
            "auto_format_on_save": true,
            "auto_format_on_save_excludes": ["*.md"]
          },
          "SublimeLinter.linters.scss.@disable": true,
          "SublimeLinter.linters.rubocop.use_bundle_exec": false
        }
      }
    JSON
  end
end

exec("subl", "--project", project)
